version: 2.1

executors:
  docker-python:
    docker:
      - image: circleci/python:3.7
  dotnet-executor:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:2.2
    working_directory: ~/cv-19-i-need-help
jobs:
  test:
    executor: docker-python
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build
          command: docker-compose build cv-19-i-need-help-test
      - run:
          name: Run tests
          command: docker-compose run cv-19-i-need-help-test
  build:
    executor: dotnet-executor
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-dependencies-
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: dotnet restore
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-
      - persist_to_workspace:
          root: ~/cv-19-i-need-help
          paths: .
  deploy-dev:
    executor: dotnet-executor
    steps:
      - attach_workspace:
          at: ~/cv-19-i-need-help
      - run:
          name: Install Node.js
          command: |
            curl -sL https://deb.nodesource.com/setup_13.x | bash -
            apt-get install -y nodejs
      - run:
          name: Install Serverless CLI
          command: npm i -g serverless && npm install
      - run:
          name: Set AWS credentials
          command: serverless config credentials -p aws -k ${DEV_AWS_ACCESS_KEY_ID} -s ${DEV_AWS_SECRET_ACCESS_KEY}  -n dev
      - run:
          name: Build and deploy application
          command: cd cv-19-i-need-help && ./build.sh && serverless deploy -s dev --aws-profile dev
  deploy-production:
    executor: dotnet-executor
    steps:
      - attach_workspace:
          at: ~/cv-19-i-need-help
      - run:
          name: Install Node.js
          command: |
            curl -sL https://deb.nodesource.com/setup_13.x | bash -
            apt-get install -y nodejs
      - run:
          name: Install Serverless CLI
          command: npm i -g serverless && npm install
      - run:
          name: Set AWS credentials
          command: serverless config credentials -p aws -k ${PROD_AWS_ACCESS_KEY_ID} -s ${PROD_AWS_SECRET_ACCESS_KEY} -n production
      - run:
          name: Build and deploy application
          command: cd cv-19-i-need-help && ./build.sh && serverless deploy -s production --aws-profile production
workflows:
  version: 2
  ci-cd:
    jobs:
      - build
      - test
      - deploy-dev:
          requires:
            - build
            - test
      - permit-deploy-production:
          type: approval
          requires:
            - deploy-dev
          filters:
            branches:
              only:
                - master
      - deploy-production:
          requires:
            - permit-deploy-production    
